version: 2

cache_1: &cache_1
  key: npm-cache-02-{{ checksum "package-lock.json" }}
  paths:
    - ./node_modules
    - ./package-lock.json
    - ./examples/basic/node_modules
    - ./examples/binding/node_modules
    - ./examples/failure-strategy/node_modules
    - ./examples/opentelemetry/node_modules
    - ./examples/parallel/node_modules
    - ./packages/workit/node_modules
    - ./packages/workit-bpm-client/node_modules
    - ./packages/workit-core/node_modules
    - ./packages/workit-stepfunction-client/node_modules
    - ./packages/workit-types/node_modules

lint: &lint
  steps:
    - checkout
    - run:
        name: Create Checksum
        command: sh .circleci/checksum.sh /tmp/checksums.txt
    - run:
        name: Setup environment variables
        command: |
          echo "export CIRCLE_NODE_VERSION=\$(node --version | grep -oE 'v[0-9]+')" >> $BASH_ENV
          source $BASH_ENV
    - run:
        name: Log out node.js version
        command: |
          node --version
          echo "CIRCLE_NODE_VERSION=${CIRCLE_NODE_VERSION}"
    - restore_cache:
        keys:
          - npm-cache-02-{{ checksum "package-lock.json" }}
    - run:
        name: Install Dependencies
        command: npm ci
    - run:
        name: Debug ls
        command: |
          ls -Al /home/circleci/project/packages/workit-bpm-client
    - save_cache:
        <<: *cache_1
    - run:
        name: Compile code
        command: npm run build
    - run:
        name: test
        command: npm run lint

node_tests: &node_tests
  steps:
    - checkout
    - run:
        name: Setup environment variables
        command: |
          echo "export CIRCLE_NODE_VERSION=\$(node --version | grep -oE 'v[0-9]+')" >> $BASH_ENV
          source $BASH_ENV
    - run:
        name: Log out node.js version
        command: |
          node --version
          echo "CIRCLE_NODE_VERSION=${CIRCLE_NODE_VERSION}"
    - restore_cache:
        keys:
          - npm-cache-02-{{ checksum "package-lock.json" }}
    - run:
        name: Install Dependencies
        command: npm ci
    - save_cache:
        <<: *cache_1
    - run:
        name: Compile code
        command: npm run build
    - run:
        name: test
        command: npm run test
    - run:
        name: report coverage
        command: if [ "${CIRCLE_NODE_VERSION}" = "v12" ]; then npm run codecov; fi
        # command: npm run codecov

node_integraton_tests: &node_integraton_tests
  steps:
    - checkout
    - run:
        name: Setup environment variables
        command: |
          echo "export CIRCLE_NODE_VERSION=\$(node --version | grep -oE 'v[0-9]+')" >> $BASH_ENV
          source $BASH_ENV
    - run:
        name: Log out node.js version
        command: |
          node --version
          echo "CIRCLE_NODE_VERSION=${CIRCLE_NODE_VERSION}"
    - restore_cache:
        keys:
          - npm-cache-02-{{ checksum "package-lock.json" }}
    - run:
        name: Install Dependencies
        command: npm ci
    - save_cache:
        <<: *cache_1
    - run:
        name: Compile code
        command: npm run build
    - run:
        name: test
        command: npm run test:all
    - run:
        name: report coverage
        # command: if [ "${CIRCLE_NODE_VERSION}" = "v12" ]; then npm run codecov; fi
        command: npm run codecov

docs_filters: &docs_filters # Ignores any commit on any branch by default
  branches:
    ignore: gh-pages

prod_filters: &prod_filters # Ignores any commit on any branch by default
  branches:
    ignore: /.*/

  # Only act on semver version tags
  tags:
    only:
      - /@(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/

workflows:
  version: 2
  test:
    jobs:
      - node18:
          filters: *docs_filters
      - node20:
          filters: *docs_filters
      - nodelts:
          filters: *docs_filters
      - lint:
          filters: *docs_filters
  # build-master: # Will only run when a tag is pushed
  #   jobs:
  #     - test:
  #         filters: *prod_filters
  #     - publish:
  #         requires:
  #           - test
  #         filters: *prod_filters

jobs:
  # Runs the tests
  node18:
    docker:
      - image: cimg/node:18.19
    <<: *node_tests
  node20:
    docker:
      - image: cimg/node:20.10
    <<: *node_tests
  lint:
    docker:
      - image: cimg/node:lts
    <<: *lint
  nodelts:
    docker:
      - image: circleci/node:lts
    <<: *node_tests


